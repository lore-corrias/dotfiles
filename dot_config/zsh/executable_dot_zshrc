# set vi mode
set -o vi

: "${ZDOTDIR:=$HOME}"

# installing fzf
if ! command -v fzf >/dev/null 2>&1 ; then
  ~/.fzf/install --key-bindings --completion --no-update-rc > /dev/null
fi

#### ZSH PLUGINS ####

# Installing antidote
[[ -e $ZDOTDIR/.antidote ]] ||
  git clone https://github.com/mattmc3/antidote.git "$ZDOTDIR"/.antidote > /dev/null

# Making sure that the plugin files exists
zsh_plugins="$ZDOTDIR/.zsh_plugins"
[[ -f "${zsh_plugins}.txt" ]] || : > "${zsh_plugins}.txt"

# Lazy-load antidote from its functions directory.
fpath=("$ZDOTDIR"/.antidote/functions $fpath)
autoload -Uz antidote

# Generate a new static file whenever .zsh_plugins.txt is updated.
if [[ ! ${zsh_plugins}.zsh -nt ${zsh_plugins}.txt ]]; then
  antidote bundle <"$zsh_plugins.txt" >|"$zsh_plugins.zsh"
fi

# Source your static plugins file.
source "$zsh_plugins.zsh"

# podman autocompletion
autoload -U compinit; compinit

# Load custom configurations
if [[ -z $TMUX && -o login && -t 1 ]]; then
  if [[ -z "$container$CONTAINER_ID" ]]; then
    exec tmux
  else
    exec tmux -S "/tmp/tmux-${CONTAINER_ID:-$container}"
  fi
fi

# auto start tmux, with containers logic
if [ "$TMUX" = "" ]; then
  if [ -z "$container" ] || [ -z "$CONTAINER_ID" ]; then
    tmux
  else
    tmux -S "/tmp/tmux-${CONTAINER_ID:-$container}"
  fi
fi

# Command to quickly run a devcontainer
dpup() {
  local signing_key
  signing_key=$(git config user.signingkey)

  devpod up "$@" \
    --ide none \
    --configure-ssh false \
    --dotfiles https://github.com/lore-corrias/dotfiles \
    --dotfiles-script devcontainers/install.sh \
    --gpg-agent-forwarding \
    --git-ssh-signing-key "$signing_key"
}

